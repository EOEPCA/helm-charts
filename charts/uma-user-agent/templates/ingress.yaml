{{- if .Values.nginxIntegration.enabled }}
{{- $hostname := default (include "uma-user-agent.fullname" .) .Values.nginxIntegration.hostname }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ include "uma-user-agent.fullname" . }}
  annotations:
    {{- if .Values.global.certManager.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.global.certManager.clusterIssuer }}
    {{- end }}
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request /authcheck;
      auth_request_set $x_user_id $upstream_http_x_user_id;
      proxy_set_header "X-User-Id" $x_user_id;
    nginx.ingress.kubernetes.io/server-snippet: |
      location /authcheck {
        internal;
        set $uma_user_agent {{ include "uma-user-agent.fullname" . }}.{{ .Release.Namespace }}.{{ .Values.global.clusterDomain }}:{{ .Values.service.port }};
        proxy_pass http://$uma_user_agent/;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Method $request_method;
      }
spec:
  rules:
  - host: {{ printf "%s.%s" $hostname .Values.global.domain | quote }}
    http:
      paths:
        {{- range .Values.nginxIntegration.paths }}
        - path: {{ .path }}
          backend:
            serviceName: {{ .service.name }}
            servicePort: {{ .service.port }}
        {{- end }}
  {{- if .Values.global.certManager.clusterIssuer }}
  tls:
    - hosts:
        - {{ printf "%s.%s" $hostname .Values.global.domain | quote }}
      secretName: {{ printf "%s-tls" $hostname | quote }}
  {{- end }}
{{- end }}
