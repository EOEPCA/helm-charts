{{- if .Values.nginxIntegration.enabled }}
{{- $domain := .Values.global.domain -}}
{{- $authRptCookieName := (printf "%s-%s" .Values.authRptCookieName .Values.global.context) -}}
{{- if and .Values.nginxIntegration.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.nginxIntegration.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.nginxIntegration.annotations "kubernetes.io/ingress.class" .Values.nginxIntegration.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ include "uma-user-agent.fullname" . }}
  annotations:
    {{- with .Values.nginxIntegration.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- if .Values.global.certManager.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.global.certManager.clusterIssuer }}
    {{- end }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request /authcheck;
      # Unpick the auth_request response
      auth_request_set $x_user_id $upstream_http_x_user_id;
      auth_request_set $x_auth_rpt $upstream_http_x_auth_rpt;
      auth_request_set $x_auth_rpt_options $upstream_http_x_auth_rpt_options;
      # Set headers on the proxied request
      proxy_set_header X-User-Id $x_user_id;
      proxy_set_header Authorization "Bearer $x_auth_rpt";
      # Set headers in the response
      add_header Set-Cookie "{{ $authRptCookieName }}=$x_auth_rpt;$x_auth_rpt_options";

      # ---
      # Some cookies are targeted to the `uma-user-agent` and should not be of interest to the
      # resource server. So we remove them from the proxied request to avoid unnecessary baggage.
      # ---
      # save original "Cookie" header value
      set $altered_cookie $http_cookie;
      # remove the `{{ $authRptCookieName }}` cookie if present
      if ($altered_cookie ~ '(.*)(^|;\s){{ $authRptCookieName }}=("[^"]*"|[^\s]*[^;]?)(\2|$|;$)(?:;\s)?(.*)') {
          # cut `{{ $authRptCookieName }}` cookie from the string
          set $altered_cookie $1$4$5;
      }
      # remove the `{{ .Values.userIdCookieName }}` cookie if present
      if ($altered_cookie ~ '(.*)(^|;\s){{ .Values.userIdCookieName }}=("[^"]*"|[^\s]*[^;]?)(\2|$|;$)(?:;\s)?(.*)') {
          # cut `{{ .Values.userIdCookieName }}` cookie from the string
          set $altered_cookie $1$4$5;
      }
      # hide original "Cookie" header
      proxy_hide_header Cookie;
      # set "Cookie" header to the new value
      proxy_set_header Cookie $altered_cookie;
      # ---
    nginx.ingress.kubernetes.io/server-snippet: |
      location ^~ /authcheck {
        internal;
        set $uma_user_agent {{ include "uma-user-agent.fullname" . }}.{{ .Release.Namespace }}.{{ .Values.global.clusterDomain }}:{{ .Values.service.port }};
        proxy_pass http://$uma_user_agent/;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Method $request_method;
      }
spec:
  {{- if and .Values.nginxIntegration.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.nginxIntegration.className }}
  {{- end }}
  rules:
    {{- range .Values.nginxIntegration.hosts }}
    - host: {{ printf "%s.%s" .host $domain | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion }}
            pathType: {{ default "ImplementationSpecific" .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ .service.name }}
                port:
                  number: {{ .service.port }}
              {{- else }}
              serviceName: {{ .service.name }}
              servicePort: {{ .service.port }}
              {{- end }}
          {{- end }}
    {{- end }}
  {{- if .Values.global.certManager.clusterIssuer }}
  tls:
    - secretName: {{ printf "%s-tls" (include "uma-user-agent.fullname" .) | quote }}
      hosts:
        {{- range .Values.nginxIntegration.hosts }}
        - {{ printf "%s.%s" .host $domain | quote }}
        {{- end }}
  {{- end }}
{{- end }}
