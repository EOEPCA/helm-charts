{{- if .Values.ingress.enabled -}}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}
  namespace: {{ .Values.global.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: {{ .Values.ingress.class }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.class }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path:
        {{- if semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion }}
        pathType: "ImplementationSpecific"
        {{- end }}
        backend:
          {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
          service:
            name: {{ .Values.pycsw.service_name }}
            port:
              number: {{ .Values.pycsw.service_port }}
          {{- else }}
          serviceName: {{ .Values.pycsw.service_name }}
          servicePort: {{ .Values.pycsw.service_port }}
          {{- end }}
  tls:
    - hosts:
      - {{ .Values.ingress.tls_host }}
      secretName: {{ .Values.ingress.tls_secret_name }}
{{- end }}