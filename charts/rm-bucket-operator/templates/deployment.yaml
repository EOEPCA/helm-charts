apiVersion: apps/v1
kind: Deployment
metadata:
  name: bucket-operator
  labels:
    app.kubernetes.io/instance: bucket-operator
    app.kubernetes.io/name: bucket-operator
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: bucket-operator
      app.kubernetes.io/name: bucket-operator
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
      labels:
        app.kubernetes.io/instance: bucket-operator
        app.kubernetes.io/name: bucket-operator
    spec:
      serviceAccountName: bucket-operator
      containers:
      - name: bucket-operator
        image: '{{ .Values.image.name | default "eoepca/rm-bucket-operator" }}:{{ .Values.image.tag | default .Chart.AppVersion }}'
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 2
          periodSeconds: 3
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 2
          periodSeconds: 8
          failureThreshold: 1
        envFrom:
        - configMapRef:
            name: bucket-operator
        - secretRef:
            name: openstack       
        resources:
          limits:
            cpu: 0.5
            memory: 0.5Gi
          requests:
            cpu: 0.2
            memory: 256Mi
        # imagePullPolicy: Always
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
